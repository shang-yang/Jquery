jquery学习：
    1.什么是jQuery
        jquery 全称javaScript Query. 是js的一个框架.本质上仍然是js.
    2.jQuery的特点
        支持各种主流浏览器
        使用特别简单
        拥有便捷的插件扩展机制和丰富的插件
    3.使用juery
        引入jQuery文件

            jQuery的封装原理
                 1 js的全局代码区只有一个，这样就会造成同名变量的值会被覆盖
                 2 使用对象封装,将代码封装到对象中
                       var obj = {};
                       obj.test = function() {}
                     但是对象如果被覆盖,则全部失效，风险极高
                 3 使用工厂模式,将代码进行封装，但是并没有解决实际问题
                       function getObj() {
                           var obj = {};
                           obj.test = function() {}
                           return obj;
                       }
                 4 将封装的函数名字去除，避免覆盖，但是函数没有办法调用
                 5 匿名自调用,函数可以在页面加载的时候调用一次，但是不能重复调用
                       (function() {
                           var obj = {};
                           obj.test = function() {}
                           return obj;
                       })()
                 6 使用闭包,将数据一次性的挂载在window对象上
                    使用更大作用域的变量来记录小作用域的变量
                       (function(obj) {
                           obj.test = function() {}
                           return obj
                       })(window)


            jQuery的选择器
                基本选择器
                    id选择器
                    标签选择器
                    类选择器
                    组合选择器
                层级选择器
                简单选择器
                内容选择器
                可见行选择器
                属性选择器
                子元素选择器
                表单选择器
                注意：
                    jQuery中选择器获取的是存储了HTML元素对象的数组
                    jQuery获取的元素对象不能够直接使用js的内容，按照数组的去除方式将对象取出后可以使用js的内容
                jquery提供了多种多样的选择器来选择需要操作的HTML元素对象。


            jQuery操作元素的属性
                获取：
                    对象名.attr("属性名") //返回当前属性值
                        注意此种方式不能获取value属性的实时数据,使用对象名.val()获取实时数据
                修改：
                    对象名.attr("属性名","值")


            jQuery操作元素的样式和内容
                操作元素对象
                    1 获取
                        对象名.html()      返回当前对象的所有内容，包括HTML标签
                        对象名.text()      返回当前对象的文本内容，不包括HTML标签
                    2 修改
                        对象名.html("新的内容")    新的内容会将原有内容覆盖，HTML标签会被解析执行
                        对象名.text("新的内容")    新的内容会将原有内容覆盖，HTML标签不会被解析
                操作元素的样式
                    1 使用css()
                            对象名.css("属性名")         返回当前属性的样式值
                            对象名.css("属性名","属性值") 增加、修改元素样式
                            对象名.css({"样式名":"样式值",...}) 使用json传参，提升代码书写效率
                    2 使用addClass()
                            对象名.addClass("类选择器名") 追加一个类样式
                            对象名.removeClass("类选择器名") 删除一个类样式


            jQuery操作元素的文档结构
                获取元素对象
                    1 内部插入
                        append()      将指定的内容追加到对象内部
                        appendTo()    将指定的元素对象追加到指定的对象内容
                        prepend()     将指定的内容追加到对象的内部前面
                        prependTo()   将指定的元素对象追加到指定的对象前面
                    2 外部插入
                        after           将指定的内容追加到指定元素后面
                        before          将指定的内容追加到指定元素前面
                        insertAfter     把所有匹配的元素插入到另一个、指定的元素集合的后面
                        insertBefore    把所有匹配的元素插入到另一个、指定的元素集合的前面
                    3 包裹
                    4 替换
                    5 删除
                        empty()
                    6 克隆
                        clone()


            jQuery中的事件
                jQuery动态操作事件
                    元素对象.bind("事件名",fn) 动态的给指定的元素对象追加指定的事件及其监听的函数
                        注意：
                            js中的是一次添加，多次添加时覆盖的效果
                            jQuery是追加的效果，可以实现给一个事件添加不同的监听函数
                    元素对象.unbind("事件名")  移除指定的元素对象的指定事件
                        注意：
                            js方式添加的事件不能移除
                    元素对象.one("事件名",fn)  给指定的元素对象添加一次性事件，事件被触发一次及失效
                       注意：
                            可以给事件添加多个一次函数，unBind可以用来解绑
                页面载入事件
                    $(document).ready(fn);
                       注意：
                            此方式可以给页面载入动态的增加多个函数对象，不会覆盖


            jQuery中的动画效果